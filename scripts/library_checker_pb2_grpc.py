# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from scripts import library_checker_pb2 as scripts_dot_library__checker__pb2


class LibraryCheckerServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Register = channel.unary_unary(
                '/librarychecker.LibraryCheckerService/Register',
                request_serializer=scripts_dot_library__checker__pb2.RegisterRequest.SerializeToString,
                response_deserializer=scripts_dot_library__checker__pb2.RegisterResponse.FromString,
                )
        self.Login = channel.unary_unary(
                '/librarychecker.LibraryCheckerService/Login',
                request_serializer=scripts_dot_library__checker__pb2.LoginRequest.SerializeToString,
                response_deserializer=scripts_dot_library__checker__pb2.LoginResponse.FromString,
                )
        self.UserInfo = channel.unary_unary(
                '/librarychecker.LibraryCheckerService/UserInfo',
                request_serializer=scripts_dot_library__checker__pb2.UserInfoRequest.SerializeToString,
                response_deserializer=scripts_dot_library__checker__pb2.UserInfoResponse.FromString,
                )
        self.UserList = channel.unary_unary(
                '/librarychecker.LibraryCheckerService/UserList',
                request_serializer=scripts_dot_library__checker__pb2.UserListRequest.SerializeToString,
                response_deserializer=scripts_dot_library__checker__pb2.UserListResponse.FromString,
                )
        self.ChangeUserInfo = channel.unary_unary(
                '/librarychecker.LibraryCheckerService/ChangeUserInfo',
                request_serializer=scripts_dot_library__checker__pb2.ChangeUserInfoRequest.SerializeToString,
                response_deserializer=scripts_dot_library__checker__pb2.ChangeUserInfoResponse.FromString,
                )
        self.ProblemInfo = channel.unary_unary(
                '/librarychecker.LibraryCheckerService/ProblemInfo',
                request_serializer=scripts_dot_library__checker__pb2.ProblemInfoRequest.SerializeToString,
                response_deserializer=scripts_dot_library__checker__pb2.ProblemInfoResponse.FromString,
                )
        self.ProblemList = channel.unary_unary(
                '/librarychecker.LibraryCheckerService/ProblemList',
                request_serializer=scripts_dot_library__checker__pb2.ProblemListRequest.SerializeToString,
                response_deserializer=scripts_dot_library__checker__pb2.ProblemListResponse.FromString,
                )
        self.ChangeProblemInfo = channel.unary_unary(
                '/librarychecker.LibraryCheckerService/ChangeProblemInfo',
                request_serializer=scripts_dot_library__checker__pb2.ChangeProblemInfoRequest.SerializeToString,
                response_deserializer=scripts_dot_library__checker__pb2.ChangeProblemInfoResponse.FromString,
                )
        self.Submit = channel.unary_unary(
                '/librarychecker.LibraryCheckerService/Submit',
                request_serializer=scripts_dot_library__checker__pb2.SubmitRequest.SerializeToString,
                response_deserializer=scripts_dot_library__checker__pb2.SubmitResponse.FromString,
                )
        self.SubmissionInfo = channel.unary_unary(
                '/librarychecker.LibraryCheckerService/SubmissionInfo',
                request_serializer=scripts_dot_library__checker__pb2.SubmissionInfoRequest.SerializeToString,
                response_deserializer=scripts_dot_library__checker__pb2.SubmissionInfoResponse.FromString,
                )
        self.SubmissionList = channel.unary_unary(
                '/librarychecker.LibraryCheckerService/SubmissionList',
                request_serializer=scripts_dot_library__checker__pb2.SubmissionListRequest.SerializeToString,
                response_deserializer=scripts_dot_library__checker__pb2.SubmissionListResponse.FromString,
                )
        self.Rejudge = channel.unary_unary(
                '/librarychecker.LibraryCheckerService/Rejudge',
                request_serializer=scripts_dot_library__checker__pb2.RejudgeRequest.SerializeToString,
                response_deserializer=scripts_dot_library__checker__pb2.RejudgeResponse.FromString,
                )
        self.LangList = channel.unary_unary(
                '/librarychecker.LibraryCheckerService/LangList',
                request_serializer=scripts_dot_library__checker__pb2.LangListRequest.SerializeToString,
                response_deserializer=scripts_dot_library__checker__pb2.LangListResponse.FromString,
                )
        self.Ranking = channel.unary_unary(
                '/librarychecker.LibraryCheckerService/Ranking',
                request_serializer=scripts_dot_library__checker__pb2.RankingRequest.SerializeToString,
                response_deserializer=scripts_dot_library__checker__pb2.RankingResponse.FromString,
                )
        self.PopJudgeTask = channel.unary_unary(
                '/librarychecker.LibraryCheckerService/PopJudgeTask',
                request_serializer=scripts_dot_library__checker__pb2.PopJudgeTaskRequest.SerializeToString,
                response_deserializer=scripts_dot_library__checker__pb2.PopJudgeTaskResponse.FromString,
                )
        self.SyncJudgeTaskStatus = channel.unary_unary(
                '/librarychecker.LibraryCheckerService/SyncJudgeTaskStatus',
                request_serializer=scripts_dot_library__checker__pb2.SyncJudgeTaskStatusRequest.SerializeToString,
                response_deserializer=scripts_dot_library__checker__pb2.SyncJudgeTaskStatusResponse.FromString,
                )
        self.FinishJudgeTask = channel.unary_unary(
                '/librarychecker.LibraryCheckerService/FinishJudgeTask',
                request_serializer=scripts_dot_library__checker__pb2.FinishJudgeTaskRequest.SerializeToString,
                response_deserializer=scripts_dot_library__checker__pb2.FinishJudgeTaskResponse.FromString,
                )


class LibraryCheckerServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def Register(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserInfo(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserList(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeUserInfo(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProblemInfo(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProblemList(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeProblemInfo(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Submit(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmissionInfo(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmissionList(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Rejudge(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LangList(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ranking(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PopJudgeTask(self, request, context):
        """--- Judge ---
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncJudgeTaskStatus(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FinishJudgeTask(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LibraryCheckerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=scripts_dot_library__checker__pb2.RegisterRequest.FromString,
                    response_serializer=scripts_dot_library__checker__pb2.RegisterResponse.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=scripts_dot_library__checker__pb2.LoginRequest.FromString,
                    response_serializer=scripts_dot_library__checker__pb2.LoginResponse.SerializeToString,
            ),
            'UserInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.UserInfo,
                    request_deserializer=scripts_dot_library__checker__pb2.UserInfoRequest.FromString,
                    response_serializer=scripts_dot_library__checker__pb2.UserInfoResponse.SerializeToString,
            ),
            'UserList': grpc.unary_unary_rpc_method_handler(
                    servicer.UserList,
                    request_deserializer=scripts_dot_library__checker__pb2.UserListRequest.FromString,
                    response_serializer=scripts_dot_library__checker__pb2.UserListResponse.SerializeToString,
            ),
            'ChangeUserInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeUserInfo,
                    request_deserializer=scripts_dot_library__checker__pb2.ChangeUserInfoRequest.FromString,
                    response_serializer=scripts_dot_library__checker__pb2.ChangeUserInfoResponse.SerializeToString,
            ),
            'ProblemInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.ProblemInfo,
                    request_deserializer=scripts_dot_library__checker__pb2.ProblemInfoRequest.FromString,
                    response_serializer=scripts_dot_library__checker__pb2.ProblemInfoResponse.SerializeToString,
            ),
            'ProblemList': grpc.unary_unary_rpc_method_handler(
                    servicer.ProblemList,
                    request_deserializer=scripts_dot_library__checker__pb2.ProblemListRequest.FromString,
                    response_serializer=scripts_dot_library__checker__pb2.ProblemListResponse.SerializeToString,
            ),
            'ChangeProblemInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeProblemInfo,
                    request_deserializer=scripts_dot_library__checker__pb2.ChangeProblemInfoRequest.FromString,
                    response_serializer=scripts_dot_library__checker__pb2.ChangeProblemInfoResponse.SerializeToString,
            ),
            'Submit': grpc.unary_unary_rpc_method_handler(
                    servicer.Submit,
                    request_deserializer=scripts_dot_library__checker__pb2.SubmitRequest.FromString,
                    response_serializer=scripts_dot_library__checker__pb2.SubmitResponse.SerializeToString,
            ),
            'SubmissionInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmissionInfo,
                    request_deserializer=scripts_dot_library__checker__pb2.SubmissionInfoRequest.FromString,
                    response_serializer=scripts_dot_library__checker__pb2.SubmissionInfoResponse.SerializeToString,
            ),
            'SubmissionList': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmissionList,
                    request_deserializer=scripts_dot_library__checker__pb2.SubmissionListRequest.FromString,
                    response_serializer=scripts_dot_library__checker__pb2.SubmissionListResponse.SerializeToString,
            ),
            'Rejudge': grpc.unary_unary_rpc_method_handler(
                    servicer.Rejudge,
                    request_deserializer=scripts_dot_library__checker__pb2.RejudgeRequest.FromString,
                    response_serializer=scripts_dot_library__checker__pb2.RejudgeResponse.SerializeToString,
            ),
            'LangList': grpc.unary_unary_rpc_method_handler(
                    servicer.LangList,
                    request_deserializer=scripts_dot_library__checker__pb2.LangListRequest.FromString,
                    response_serializer=scripts_dot_library__checker__pb2.LangListResponse.SerializeToString,
            ),
            'Ranking': grpc.unary_unary_rpc_method_handler(
                    servicer.Ranking,
                    request_deserializer=scripts_dot_library__checker__pb2.RankingRequest.FromString,
                    response_serializer=scripts_dot_library__checker__pb2.RankingResponse.SerializeToString,
            ),
            'PopJudgeTask': grpc.unary_unary_rpc_method_handler(
                    servicer.PopJudgeTask,
                    request_deserializer=scripts_dot_library__checker__pb2.PopJudgeTaskRequest.FromString,
                    response_serializer=scripts_dot_library__checker__pb2.PopJudgeTaskResponse.SerializeToString,
            ),
            'SyncJudgeTaskStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncJudgeTaskStatus,
                    request_deserializer=scripts_dot_library__checker__pb2.SyncJudgeTaskStatusRequest.FromString,
                    response_serializer=scripts_dot_library__checker__pb2.SyncJudgeTaskStatusResponse.SerializeToString,
            ),
            'FinishJudgeTask': grpc.unary_unary_rpc_method_handler(
                    servicer.FinishJudgeTask,
                    request_deserializer=scripts_dot_library__checker__pb2.FinishJudgeTaskRequest.FromString,
                    response_serializer=scripts_dot_library__checker__pb2.FinishJudgeTaskResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'librarychecker.LibraryCheckerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LibraryCheckerService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/librarychecker.LibraryCheckerService/Register',
            scripts_dot_library__checker__pb2.RegisterRequest.SerializeToString,
            scripts_dot_library__checker__pb2.RegisterResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/librarychecker.LibraryCheckerService/Login',
            scripts_dot_library__checker__pb2.LoginRequest.SerializeToString,
            scripts_dot_library__checker__pb2.LoginResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UserInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/librarychecker.LibraryCheckerService/UserInfo',
            scripts_dot_library__checker__pb2.UserInfoRequest.SerializeToString,
            scripts_dot_library__checker__pb2.UserInfoResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UserList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/librarychecker.LibraryCheckerService/UserList',
            scripts_dot_library__checker__pb2.UserListRequest.SerializeToString,
            scripts_dot_library__checker__pb2.UserListResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeUserInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/librarychecker.LibraryCheckerService/ChangeUserInfo',
            scripts_dot_library__checker__pb2.ChangeUserInfoRequest.SerializeToString,
            scripts_dot_library__checker__pb2.ChangeUserInfoResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProblemInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/librarychecker.LibraryCheckerService/ProblemInfo',
            scripts_dot_library__checker__pb2.ProblemInfoRequest.SerializeToString,
            scripts_dot_library__checker__pb2.ProblemInfoResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProblemList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/librarychecker.LibraryCheckerService/ProblemList',
            scripts_dot_library__checker__pb2.ProblemListRequest.SerializeToString,
            scripts_dot_library__checker__pb2.ProblemListResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeProblemInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/librarychecker.LibraryCheckerService/ChangeProblemInfo',
            scripts_dot_library__checker__pb2.ChangeProblemInfoRequest.SerializeToString,
            scripts_dot_library__checker__pb2.ChangeProblemInfoResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Submit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/librarychecker.LibraryCheckerService/Submit',
            scripts_dot_library__checker__pb2.SubmitRequest.SerializeToString,
            scripts_dot_library__checker__pb2.SubmitResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmissionInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/librarychecker.LibraryCheckerService/SubmissionInfo',
            scripts_dot_library__checker__pb2.SubmissionInfoRequest.SerializeToString,
            scripts_dot_library__checker__pb2.SubmissionInfoResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmissionList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/librarychecker.LibraryCheckerService/SubmissionList',
            scripts_dot_library__checker__pb2.SubmissionListRequest.SerializeToString,
            scripts_dot_library__checker__pb2.SubmissionListResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Rejudge(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/librarychecker.LibraryCheckerService/Rejudge',
            scripts_dot_library__checker__pb2.RejudgeRequest.SerializeToString,
            scripts_dot_library__checker__pb2.RejudgeResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LangList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/librarychecker.LibraryCheckerService/LangList',
            scripts_dot_library__checker__pb2.LangListRequest.SerializeToString,
            scripts_dot_library__checker__pb2.LangListResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Ranking(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/librarychecker.LibraryCheckerService/Ranking',
            scripts_dot_library__checker__pb2.RankingRequest.SerializeToString,
            scripts_dot_library__checker__pb2.RankingResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PopJudgeTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/librarychecker.LibraryCheckerService/PopJudgeTask',
            scripts_dot_library__checker__pb2.PopJudgeTaskRequest.SerializeToString,
            scripts_dot_library__checker__pb2.PopJudgeTaskResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncJudgeTaskStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/librarychecker.LibraryCheckerService/SyncJudgeTaskStatus',
            scripts_dot_library__checker__pb2.SyncJudgeTaskStatusRequest.SerializeToString,
            scripts_dot_library__checker__pb2.SyncJudgeTaskStatusResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FinishJudgeTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/librarychecker.LibraryCheckerService/FinishJudgeTask',
            scripts_dot_library__checker__pb2.FinishJudgeTaskRequest.SerializeToString,
            scripts_dot_library__checker__pb2.FinishJudgeTaskResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
